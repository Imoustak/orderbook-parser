[[outputs.influxdb]]
  urls = ["http://influxdb:8086"]
  database = "metricsdb"
  timeout = "5s"

# Statsd Server
[[inputs.statsd]]
  ## Protocol, must be "tcp", "udp4", "udp6" or "udp" (default=udp)
  protocol = "udp"
  # Address and port to host UDP listener on
  service_address = ":8080"
  # Delete gauges every interval (default=false)
  delete_gauges = true
  # Delete counters every interval (default=false)
  delete_counters = true
  # Delete sets every interval (default=false)
  delete_sets = false
  # Delete timings & histograms every interval (default=true)
  delete_timings = true
  # Percentiles to calculate for timing & histogram stats
  percentiles = [50.0, 90.0, 99.0, 99.9, 99.95, 100.0]
  ## separator to use between elements of a statsd metric
  metric_separator = "_"
  # convert measurement names, “.” to “_” and “-” to “__”
  convert_names = false
  templates = [
   "measurement.measurement.app.exchange.pair"
  ]
  # Number of UDP messages allowed to queue up, once filled,
  # the statsd server will start dropping packets
  allowed_pending_messages = 10000
  # Number of timing/histogram values to track per-measurement in the
  # calculation of percentiles. Raising this limit increases the accuracy
  # of percentiles but also increases the memory usage and cpu time.
  percentile_limit = 1000
  # UDP packet size for the server to listen for. This will depend on the size
  # of the packets that the client is sending, which is usually 1500 bytes.
  udp_packet_size = 1500